[mcu]
serial: /dev/ttyAMA0
restart_method: command


#[mcu rpi]
#serial: /tmp/klipper_host_mcu

#[adxl345]
#cs_pin: rpi:None
#spi_speed: 2000000
#spi_bus: spidev2.0

#[resonance_tester]
#accel_chip: adxl345
#accel_per_hz: 70
#probe_points: 110,110,20

[input_shaper]
shaper_freq_x: 80.4
shaper_type_x: zv
shaper_freq_y: 43.2
shaper_type_y: zv


[verify_heater extruder]
check_gain_time: 200
hysteresis: 5





[stepper_x]
step_pin: gpio11
dir_pin: gpio10
enable_pin: !gpio12
microsteps: 128
rotation_distance: 40
endstop_pin: ^gpio4
endstop_pin: tmc2209_stepper_x:virtual_endstop
homing_retract_dist: 0
position_endstop: -3
position_max: 220
position_min: -12
homing_speed: 25

[tmc2209 stepper_x]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 0
run_current: 1.1
#hold_current: 0.6
stealthchop_threshold: 99999
diag_pin: ^gpio4
driver_SGTHRS: 75

[stepper_y]
step_pin: gpio6
dir_pin: !gpio5
enable_pin: !gpio7
microsteps: 128
rotation_distance: 40
endstop_pin:^gpio3
endstop_pin: tmc2209_stepper_y:virtual_endstop
homing_retract_dist: 0
position_endstop: 0
position_max: 215
homing_speed: 25

[tmc2209 stepper_y]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 2
run_current: 1.1
#hold_current: 0.6
stealthchop_threshold: 99999
diag_pin: ^gpio3
driver_SGTHRS: 75

[stepper_z]
step_pin: gpio19
dir_pin: !gpio28
enable_pin: !gpio2
microsteps: 128
rotation_distance: 2.66666 
#endstop_pin: ^!gpio25
endstop_pin: probe:z_virtual_endstop
position_min: -20

position_max: 160
homing_speed: 20

[tmc2209 stepper_z]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 1
run_current: 0.8
hold_current: 0.5
stealthchop_threshold: 999999

[extruder]
step_pin: gpio14
dir_pin: !gpio13
enable_pin: !gpio15
microsteps: 64
rotation_distance: 3.4334
nozzle_diameter: 0.4
filament_diameter: 1.75
heater_pin: gpio23
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: gpio27
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
min_temp: 0
max_temp: 260
pressure_advance :0.025
max_power: 1
max_extrude_only_distance: 999999

[tmc2209 extruder]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 3
run_current: 0.65
hold_current: 0.1
stealthchop_threshold: 0

[heater_bed]
heater_pin: gpio21
sensor_type: EPCOS 100K B57560G104F
sensor_pin: gpio26
#control: pid
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 105



[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100


[fan]
pin: gpio29
max_power: 0.5

[fan_generic nevermore]
pin: gpio17
max_power: 1


[temperature_fan skr_pico]
pin: gpio20
max_power: 0.5
sensor_type: temperature_mcu
min_temp: 0
max_temp: 70
target_temp: 40.0
control: watermark
shutdown_speed: 0


[heater_fan hotend_fan]
pin: gpio18
heater: extruder
heater_temp: 50.0

[probe]
pin: !gpio25
x_offset: -24.0
y_offset: 12.0
#z_offset: -1.791
speed: 5.0
samples: 2
sample_retract_dist: 2
lift_speed: 20
samples_result: average
samples_tolerance: 0.200
samples_tolerance_retries: 3

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 30, 20
mesh_max: 180, 200
probe_count: 5, 5

[printer]
kinematics: cartesian
max_velocity: 400
max_accel: 1000
max_z_velocity: 20
max_z_accel: 20

[exclude_object]

[safe_z_home]
home_xy_position: 100, 100
speed: 50.0
z_hop: 5
z_hop_speed: 20



[servo fan_servo]
pin: gpio24
maximum_servo_angle: 255
initial_angle:0
minimum_pulse_width: 0.001
maximum_pulse_width: 0.002




#####Â MACRO ##################################################################################################################


[gcode_macro M106]
rename_existing: M106.1
gcode:
  M106.1 S{params.S}
  SET_SERVO SERVO=fan_servo ANGLE={params.S}




[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
variable_extrude: 1.0
gcode:
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  M106 S0
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z4.5 F300
    G90
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}
    G28 X Y
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    G1 Y{y_park} F2000
    M84
  CANCEL_PRINT_BASE



[gcode_macro Hotend_PID] 

gcode:  
        M106 S31
        PID_CALIBRATE HEATER=extruder TARGET=220
        M106 S0



[gcode_macro Bed_PID] 

gcode:             
        PID_CALIBRATE HEATER=heater_bed TARGET=60


[gcode_macro BED_MESH_CALIBRATE]

rename_existing: BED_MESH_CALIBRATE_BASE
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0 
variable_mesh_area_offset : 5.0
variable_probe_samples : 2
variable_min_probe_count : 4
variable_probe_count_scale_factor : 1.0
variable_enable_reference_index : False
gcode:
    {% if params.AREA_START and params.AREA_END %}
        {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
        {% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
        {% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
        {% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
        {% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}

        {% set area_min_x = params.AREA_START.split(",")[0]|float %}
	{% set area_min_y = params.AREA_START.split(",")[1]|float %}
	{% set area_max_x = params.AREA_END.split(",")[0]|float %}
	{% set area_max_y = params.AREA_END.split(",")[1]|float %}

	{% if bedMeshConfig.probe_count.split(",")|length == 2 %}
            {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
            {% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|int %}
        {% else %}
            {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
            {% set meshPointY = bedMeshConfig.probe_count.split(",")[0]|int %}
        {% endif %}

	{% set meshMaxPointX = meshPointX %}
	{% set meshMaxPointY = meshPointY %}


        {% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
            {% if area_min_x - mesh_area_offset >=  safe_min_x %}
                {% set area_min_x = area_min_x - mesh_area_offset %}
            {% else %}
                {% set area_min_x = safe_min_x %}
            {% endif %}

            {% if area_min_y - mesh_area_offset >=  safe_min_y %}
                {% set area_min_y = area_min_y - mesh_area_offset %}
            {% else %}
                {% set area_min_y = safe_min_y %}
            {% endif %}

            {% if area_max_x + mesh_area_offset <=  safe_max_x %}
                {% set area_max_x = area_max_x + mesh_area_offset %}
            {% else %}
                {% set area_max_x = safe_max_x %}
            {% endif %}

            {% if area_max_y + mesh_area_offset <=  safe_max_y %}
                {% set area_max_y = area_max_y + mesh_area_offset %}
            {% else %}
                {% set area_max_y = safe_max_y %}
            {% endif %}

            {% set meshPointX = (meshPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x) * probe_count_scale_factor)|round(0)|int %}
            {% if meshPointX < min_probe_count %}
                {% set meshPointX = min_probe_count %}
            {% endif %}
	    {% if meshPointX > meshMaxPointX %}
                {% set meshPointX = meshMaxPointX %}
            {% endif %}

            {% set meshPointY = (meshPointY * (area_max_y -area_min_y ) / (safe_max_y - safe_min_y) * probe_count_scale_factor )|round(0)|int %}
            {% if meshPointY < min_probe_count %}
                {% set meshPointY = min_probe_count %}
            {% endif %}
	    {% if meshPointY > meshMaxPointY %}
                {% set meshPointY = meshMaxPointY %}
            {% endif %}

            {% set algorithm = "bicubic" %}
	    {% if "algorithm" in bedMeshConfig %}
	        {% set algorithm = bedMeshConfig.algorithm %}
            {% endif %}
            {% if meshPointX >=7 or meshPointY >=7 %}
                {% set algorithm = "bicubic" %}
            {% endif %}

            {% if enable_reference_index %}
                {% set referenceIndex = (meshPointX * meshPointY / 2 - 1 )|round(0)|int %}
                BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm} relative_reference_index={referenceIndex}
            {% else %}
                BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm}
            {% endif %}
        {% else %}
            BED_MESH_CALIBRATE_BASE
        {% endif %}
    {% else %}
        BED_MESH_CALIBRATE_BASE
    {% endif %}


   

[gcode_macro Load_PLA]

gcode:

  M104 S220
  M109 S220
  M83
  G1 E50 F300
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
  M84


[gcode_macro Unload_PLA]

gcode:

  M104 S220
  M109 S220
  M83
  G1 E-50 F300
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
  M84



[gcode_macro Load_TPU_PETG]

gcode:

  M104 S240
  M109 S240
  M83
  G1 E50 F300
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
  M84
    

[gcode_macro Unload_TPU_PETG]

gcode:

  M104 S240
  M109 S240
  M83
  G1 E-50 F300
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
  M84

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = 2.200
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 27.870
#*# pid_ki = 1.475
#*# pid_kd = 131.684
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 71.903
#*# pid_ki = 1.795
#*# pid_kd = 719.924
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.178750, -0.043021, 0.004583, 0.017344, -0.059062
#*# 	-0.123698, -0.058489, 0.066562, 0.076979, 0.093906
#*# 	-0.142968, -0.034948, 0.086250, 0.075989, 0.170989
#*# 	-0.111146, -0.022865, 0.081823, 0.071302, 0.126666
#*# 	-0.189166, -0.159687, -0.013437, -0.005365, -0.038698
#*# tension = 0.2
#*# min_x = 30.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 20.0
#*# x_count = 5
#*# max_y = 200.0
#*# mesh_x_pps = 2
#*# max_x = 180.0
